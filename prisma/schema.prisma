generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  clerkId     String    @unique
  email       String    @unique
  name        String?
  username    String?   @unique
  bio         String?
  location    String?
  avatarUrl   String?
  rating      Float     @default(0)
  
  // Relations
  // games       Game[]    @relation("GameParticipants")
  // createdGames Game[]   @relation("GameOrganizer")
  favorites   Court[]   @relation("UserFavorites")
  friends     User[]    @relation("UserFriends")
  friendsOf   User[]    @relation("UserFriends")

  // Game history and stats
  gamesPlayed Int       @default(0)
  courtsVisited Int     @default(0)
}

model Court {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  name        String
  description String?
  latitude    Float
  longitude   Float
  address     String?
  city        String?
  state       String?
  zipCode     String?
  
  // Features and amenities
  hasLights   Boolean   @default(false)
  hasWaterFountain Boolean @default(false)
  hasRestrooms Boolean  @default(false)
  
  // Court types
  isPickleball Boolean  @default(false)
  isBasketball Boolean  @default(false)
  
  // Relations
  // games       Game[]
  favoritedBy User[]    @relation("UserFavorites")
}

model Game {
  id            Int       @id @default(autoincrement())
  date          DateTime
  startTime     DateTime
  gameType      String
  skillLevel    String
  playersNeeded Int
  notes         String?
  courtId       Int
  organizerId   String

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Comment out the relation temporarily
  // court       Court    @relation(fields: [courtId], references: [id])
}

